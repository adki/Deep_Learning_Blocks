
[RTL simulation for integer]
   1. $ cd sim/xsim
   2. set_vivado
   3. $ make DATA_TYPE=INTEGER

   1. $ cd sim/iveriog
   3. $ make DATA_TYPE=INTEGER

[HW/SW co-simulation]

   1. $ cd c.cosm/test_mover
   2. $ set_vivado; set_cosim; set_dlr
   3. $ make hw RUN_TYPE=COSIM_BFM DATA_TYPE=int32_t SIMULATOR=xsim
      - This step prepares bench/verilog/defines_system.v
   4. $ make sw RUN_TYPE=COSIM_BFM DATA_TYPE=int32_t SIMULATOR=xsim
      - This step prepares src/defines_dpu.h using bench/verilog/defines_system.v
   5. $ make cosim SIMULATOR=xsim

   1. $ cd c.cosm/test_mover
   2. $ set_vivado; set_cosim; set_dlr
   3. $ make hw RUN_TYPE=COSIM_BFM DATA_TYPE=float SIMULATOR=xsim
      - This step prepares bench/verilog/defines_system.v
   4. $ make sw RUN_TYPE=COSIM_BFM DATA_TYPE=float SIMULATOR=xsim
      - This step prepares src/defines_dpu.h using bench/verilog/defines_system.v
   5. $ make cosim SIMULATOR=xsim

[CON-FMC emulation]

   1. $ cd syn/vivado.z7
   2. $ set_vivado
   3. $ make DATA_TYPE=FLOATING_POINT

   4. $ cd gen_ip/vivado.z7
   5. $ set_vivado
   6. $ make DATA_TYPE=FLOATING_POINT

   7. $ cd impl/vivado.zedboard
   8. $ set_confmc; set_vivado
   9. $ make DATA_TYPE=FLOATING_POINT
   10. TCL> syn_impl
   11. .. Vivado HW Manager .. download bit stream

   12. $ cd c.confmc/test_mover
   13. $ make sw RUN_TYPE=TRX_AXI DATA_TYPE=float
   14. $ make run
